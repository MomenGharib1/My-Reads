{"version":3,"sources":["components/ShelfUpdater.js","components/BooksAPI.js","components/BookSearch.js","components/RenderBooks.js","components/HomeLibrary.js","components/App.js","index.js"],"names":["ShelfUpdater","book","updateShelf","shelf","className","defaultValue","onChange","event","target","value","disabled","api","token","localStorage","Math","random","toString","substr","headers","Accept","Authorization","BookSearch","useState","query","setQuery","result","setResult","to","type","trim","maxResults","fetch","method","body","JSON","stringify","then","res","json","data","books","BooksAPI","list","length","startsWith","placeholder","map","b","style","width","height","backgroundImage","imageLinks","thumbnail","title","authors","id","RenderBooks","Books","filter","HomeLibrary","App","setBooks","useEffect","a","getBooks","doUpdate","newShelf","concat","exact","path","element","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0e95712b.chunk.js","sourcesContent":["import PropTypes from \"prop-types\";\r\n\r\nconst ShelfUpdater = ({ book, updateShelf }) => {\r\n  let shelf = \"none\";\r\n  if (book?.shelf) {\r\n    shelf = book?.shelf;\r\n  }\r\n  const handleUpdates = (event) => {\r\n    updateShelf(book, event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className=\"book-shelf-changer\">\r\n      <select defaultValue={shelf} onChange={handleUpdates}>\r\n        <option value=\"no\" disabled>\r\n          Move to...\r\n        </option>\r\n        <option value=\"currentlyReading\">Currently Reading</option>\r\n        <option value=\"wantToRead\">Want to Read</option>\r\n        <option value=\"read\">Read</option>\r\n        <option value=\"none\">None</option>\r\n      </select>\r\n    </div>\r\n  );\r\n};\r\nShelfUpdater.propTypes = {\r\n  book: PropTypes.object.isRequired,\r\n  updateShelf: PropTypes.func.isRequired,\r\n};\r\nexport default ShelfUpdater;\r\n","const api = \"https://reactnd-books-api.udacity.com\";\r\n\r\nlet token = localStorage.token;\r\n\r\nif (!token) token = localStorage.token = Math.random().toString(36).substr(-8);\r\n\r\nconst headers = {\r\n  Accept: \"application/json\",\r\n  Authorization: token,\r\n};\r\n\r\nexport const get = (bookId) =>\r\n  fetch(`${api}/books/${bookId}`, { headers })\r\n    .then((res) => res.json())\r\n    .then((data) => data.book);\r\n\r\nexport const getAll = () =>\r\n  fetch(`${api}/books`, { headers })\r\n    .then((res) => res.json())\r\n    .then((data) => data.books);\r\n\r\nexport const update = (book, shelf) =>\r\n  fetch(`${api}/books/${book.id}`, {\r\n    method: \"PUT\",\r\n    headers: {\r\n      ...headers,\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify({ shelf }),\r\n  }).then((res) => res.json());\r\n\r\nexport const search = (query, maxResults) =>\r\n  fetch(`${api}/search`, {\r\n    method: \"POST\",\r\n    headers: {\r\n      ...headers,\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify({ query, maxResults }),\r\n  })\r\n    .then((res) => res.json())\r\n    .then((data) => data.books);\r\n","import { Link } from \"react-router-dom\";\r\nimport { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport ShelfUpdater from \"./ShelfUpdater\";\r\nimport * as BooksAPI from \"./BooksAPI\";\r\n\r\nconst BookSearch = ({ updateShelf }) => {\r\n  const [query, setQuery] = useState(\"\");\r\n  const [result, setResult] = useState([]);\r\n\r\n  const Search = (event) => {\r\n    const query = event.target.value;\r\n    setQuery(query.trim());\r\n    if (query !== \"\" && query !== \" \") {\r\n      BooksAPI.search(query.trim(), 30).then((list) => {\r\n        list.length > 0 ? setResult(list) : setResult([]);\r\n      });\r\n    } else if (query.startsWith(\" \", 0)) {\r\n      setResult([]);\r\n    } else {\r\n      setResult([]);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"search-books\">\r\n      <div className=\"search-books-bar\">\r\n        <Link className=\"close-search\" to=\"/\">\r\n          Close\r\n        </Link>\r\n        <div className=\"search-books-input-wrapper\">\r\n          <input\r\n            type=\"text\"\r\n            value={query}\r\n            onChange={Search}\r\n            placeholder=\"Search by title or author\"\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className=\"search-books-results\">\r\n        <ol className=\"books-grid\">\r\n          {result.length !== 0 && query !== \"\" ? (\r\n            result.map((b) => (\r\n              <li key={b?.id}>\r\n                {\" \"}\r\n                <div className=\"book\">\r\n                  <div className=\"book-top\">\r\n                    <div\r\n                      className=\"book-cover\"\r\n                      style={{\r\n                        width: 128,\r\n                        height: 193,\r\n                        backgroundImage: `url(${b?.imageLinks?.thumbnail})`,\r\n                      }}\r\n                    ></div>\r\n                    <ShelfUpdater book={b} updateShelf={updateShelf} />\r\n                  </div>\r\n                  <div className=\"book-title\">{b?.title}</div>\r\n                  <div className=\"book-authors\">{b?.authors}</div>\r\n                </div>{\" \"}\r\n              </li>\r\n            ))\r\n          ) : (\r\n            <p>No results found</p>\r\n          )}\r\n        </ol>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nBookSearch.propTypes = {\r\n  updateShelf: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default BookSearch;\r\n","import { Link } from \"react-router-dom\";\r\nimport ShelfUpdater from \"./ShelfUpdater\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst RenderBooks = ({ Books, updateShelf }) => {\r\n  return (\r\n    <div className=\"list-books\">\r\n      <div className=\"list-books-title\">\r\n        <h1>MyReads</h1>\r\n      </div>\r\n      <div className=\"list-books-content\">\r\n        <div>\r\n          <div className=\"bookshelf\">\r\n            <h2 className=\"bookshelf-title\">Currently Reading</h2>\r\n            <div className=\"bookshelf-books\">\r\n              <ol className=\"books-grid\">\r\n                {Books.filter((b) => b?.shelf === \"currentlyReading\").map(\r\n                  (b) => (\r\n                    <li key={b?.id}>\r\n                      <div className=\"book\">\r\n                        <div className=\"book-top\">\r\n                          <div\r\n                            className=\"book-cover\"\r\n                            style={{\r\n                              width: 128,\r\n                              height: 193,\r\n                              backgroundImage: `url(${b?.imageLinks?.thumbnail})`,\r\n                            }}\r\n                          >\r\n                            {\" \"}\r\n                          </div>\r\n                          <ShelfUpdater book={b} updateShelf={updateShelf} />\r\n                        </div>\r\n                        <div className=\"book-title\">{b?.title}</div>\r\n                        <div className=\"book-authors\">{b?.authors}</div>\r\n                      </div>\r\n                    </li>\r\n                  )\r\n                )}\r\n              </ol>\r\n            </div>\r\n          </div>\r\n          <div className=\"bookshelf\">\r\n            <h2 className=\"bookshelf-title\">Want to Read</h2>\r\n            <div className=\"bookshelf-books\">\r\n              <ol className=\"books-grid\">\r\n                {Books.filter((b) => b?.shelf === \"wantToRead\").map((b) => (\r\n                  <li key={b?.id}>\r\n                    <div className=\"book\">\r\n                      <div className=\"book-top\">\r\n                        <div\r\n                          className=\"book-cover\"\r\n                          style={{\r\n                            width: 128,\r\n                            height: 193,\r\n                            backgroundImage: `url(${b?.imageLinks?.thumbnail})`,\r\n                          }}\r\n                        ></div>\r\n                        <ShelfUpdater book={b} updateShelf={updateShelf} />\r\n                      </div>\r\n                      <div className=\"book-title\"> {b?.title}</div>\r\n                      <div className=\"book-authors\">{b?.authors}</div>\r\n                    </div>\r\n                  </li>\r\n                ))}\r\n              </ol>\r\n            </div>\r\n          </div>\r\n          <div className=\"bookshelf\">\r\n            <h2 className=\"bookshelf-title\">Read</h2>\r\n            <div className=\"bookshelf-books\">\r\n              <ol className=\"books-grid\">\r\n                {Books.filter((b) => b?.shelf === \"read\").map((b) => (\r\n                  <li key={b?.id}>\r\n                    <div className=\"book\">\r\n                      <div className=\"book-top\">\r\n                        <div\r\n                          className=\"book-cover\"\r\n                          style={{\r\n                            width: 128,\r\n                            height: 192,\r\n                            backgroundImage: `url(${b?.imageLinks?.thumbnail})`,\r\n                          }}\r\n                        ></div>\r\n                        <ShelfUpdater book={b} updateShelf={updateShelf} />\r\n                      </div>\r\n                      <div className=\"book-title\">{b?.title}</div>\r\n                      <div className=\"book-authors\">{b?.authors}</div>\r\n                    </div>\r\n                  </li>\r\n                ))}\r\n              </ol>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"open-search\">\r\n        <Link to=\"/search\"> Add a book </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nRenderBooks.propTypes = {\r\n  Books: PropTypes.array.isRequired,\r\n  updateShelf: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default RenderBooks;\r\n","import RenderBooks from \"./RenderBooks\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst HomeLibrary = ({ Books, updateShelf }) => {\r\n  return (\r\n    <div className=\"app\">\r\n      <RenderBooks Books={Books} updateShelf={updateShelf} />\r\n    </div>\r\n  );\r\n};\r\n\r\nHomeLibrary.propTypes = {\r\n  Books: PropTypes.array.isRequired,\r\n  updateShelf: PropTypes.func.isRequired,\r\n};\r\nexport default HomeLibrary;\r\n","import \"../css/App.css\";\r\nimport { Route, Routes } from \"react-router-dom\";\r\nimport BookSearch from \"./BookSearch\";\r\nimport HomeLibrary from \"./HomeLibrary\";\r\nimport { useEffect, useState } from \"react\";\r\nimport * as BooksAPI from \"./BooksAPI\";\r\n\r\nconst App = () => {\r\n  const [books, setBooks] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const getBooks = async () => {\r\n      const list = await BooksAPI.getAll();\r\n      setBooks(list);\r\n    };\r\n    getBooks();\r\n  }, []);\r\n\r\n  const doUpdate = (book, newShelf) => {\r\n    BooksAPI.update(book, newShelf);\r\n    book.shelf = newShelf;\r\n    setBooks(books.filter((b) => b?.id !== book.id).concat(book));\r\n  };\r\n\r\n  return (\r\n    <Routes>\r\n      <Route\r\n        exact\r\n        path=\"/\"\r\n        element={<HomeLibrary Books={books} updateShelf={doUpdate} />}\r\n      />\r\n      <Route path=\"/search\" element={<BookSearch updateShelf={doUpdate} />} />\r\n    </Routes>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./css/index.css\";\r\nimport App from \"./components/App.js\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <App />\r\n  </BrowserRouter>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}